#! /bin/sh

set -e
set -u

compiler="$1"

scratchdir=$(mktemp -d)
cleanup () {
  rm -rf $scratchdir
}
trap cleanup EXIT

testdir="./testsuit"
runner="./$compiler"

if ! test -f "$runner"; then
    echo "$runner does not exist!" 1>&2
    exit 1
fi

test_invalid() {
    success=0
    fail=0

    echo "\n\n===================TEST INVALID===================="
    for t in $testdir/invalid/*.xss; do
        result=""

        if timeout 5s $runner $t > $scratchdir/t.out 2>&1; then
            result="[Fail]"
        fi

        if [ "$result" !=  "" ]; then
            fail=$((fail+1))
            echo "$result" "$t"
        else
            success=$((success+1))
        fi
    done

    printf "\n<%d successes, %d failures>\n" $success $fail
}

test_valid() {
    success=0
    fail=0

    echo "\n\n===================TEST VALID===================="
    for t in $testdir/valid/*.xss; do
        result=""

        if ! $runner $t > $scratchdir/t.out 2>&1; then
            result="[RunFail]"
        else
            okname="$t.ok"
            if [ ! -f "$okname" ]; then
                okname="$testdir/valid/empty.xss.ok"
            fi
            if ! diff -u "$okname" "$scratchdir/t.out"; then
                result="[NotMatch]"
            fi
        fi

        if [ "$result" !=  "" ]; then
            fail=$((fail+1))
            echo "$result" "$t"
            sed -e 's/^//' $scratchdir/t.out

            echo "--------------\n"
            cat $t
            return
        else
            success=$((success+1))
        fi
    done

    printf "\n<%d successes, %d failures>\n" $success $fail
}

test_invalid
test_valid
